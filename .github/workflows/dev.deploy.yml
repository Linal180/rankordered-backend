# This is a basic workflow to help you get started with Actions

name: development

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the master branch
    push:
        branches: [master]
    pull_request:
        branches: [master]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# to ensure only the latest workflow is running through the action
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

# env:
#     URL: http://localhost
#     PORT: 4002
#     DATABASE_URL: ${{secrets.DATABASE_URL}}
#     DATABASE_NAME: ${{secrets.STG_DATABASE_NAME}}
#     MONGO_USERNAME: ${{secrets.MONGO_USERNAME}}
#     MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
#     MONGO_AUTHSOURCE: ${{secrets.MONGO_AUTHSOURCE}}
#     JWT_SECRET: ${{secrets.JWT_SECRET}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    install:
        runs-on: self-hosted
        steps:
            - uses: actions/checkout@v2
            - name: install
              run: yarn install --silent

    create-envfile:
        runs-on: self-hosted
        steps:
            - name: Create env file
              run: |
                  touch .env
                  echo URL="http://localhost" >> .env
                  echo PORT="4001" >> .env
                  echo DATABASE_URL=${{secrets.DATABASE_URL}} >> .env
                  echo DATABASE_NAME=${{secrets.STG_DATABASE_NAME}} >> .env
                  echo MONGO_USERNAME=${{secrets.MONGO_USERNAME}} >> .env
                  echo MONGO_PASSWORD=${{secrets.MONGO_PASSWORD}} >> .env
                  echo MONGO_AUTHSOURCE=${{secrets.MONGO_AUTHSOURCE}} >> .env
                  echo JWT_SECRET=${{secrets.JWT_SECRET}} >> .env
                  cat .env

    lint:
        runs-on: self-hosted
        needs: [install, create-envfile]
        if: success()
        steps:
            - name: install
              run: yarn lint

    test:
        runs-on: self-hosted
        needs: lint
        if: success()
        steps:
            - name: test
              run: yarn test --silent

    build:
        runs-on: self-hosted
        needs: test
        if: success()
        steps:
            - name: build
              run: yarn build

    deploy:
        runs-on: self-hosted
        needs: build
        if: success()
        steps:
            - name: copy
              run: rsync -avuq --delete "./" "/home/rankordered/stg-rankordered-backend-nest" --exclude ".git" --exclude "node_modules"
            - name: reload application
              run: pm2 reload rankordered-backend-staging
            - name: save pm2 config
              run: pm2 save
